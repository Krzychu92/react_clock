{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","name","today","className","toUTCString","slice","getRandomName","value","Date","now","toString","App","state","hasClock","clockName","timerId","timeId","this","startTimer","bind","leftClickHandler","rightClickHandler","document","addEventListener","_prevProps","prevState","previousClockName","currentClockName","console","debug","clearInterval","removeEventListener","setState","event","preventDefault","window","setInterval","info","React","Component","ReactDOM","render","getElementById"],"mappings":"sNAKaA,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACnB,sBAAKC,UAAU,MAAf,UACE,6CAEA,sBAAKA,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGD,EAAME,cAAcC,OAAO,IAAK,YCbzC,SAASC,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWL,OAAO,GAE3C,MAAM,SAAN,OAAgBE,GASX,IAAMI,EAAb,4MACEC,MAAe,CACbC,UAAU,EACVX,MAAO,IAAIM,KACXM,UAAW,WAJf,EAOEC,QAAU,EAPZ,EASEC,OAAS,EATX,uDAWE,WACEC,KAAKC,WAAaD,KAAKC,WAAWC,KAAKF,MACvCA,KAAKG,iBAAmBH,KAAKG,iBAAiBD,KAAKF,MACnDA,KAAKI,kBAAoBJ,KAAKI,kBAAkBF,KAAKF,MACrDK,SAASC,iBAAiB,cAAeN,KAAKI,mBAC9CC,SAASC,iBAAiB,QAASN,KAAKG,kBACxCH,KAAKC,eAjBT,gCAoBE,SAAmBM,EAAmBC,GACpC,IAAMC,EAAoBD,EAAUX,UAC9Ba,EAAmBV,KAAKL,MAAME,UAEhCY,IAAsBC,GAExBC,QAAQC,MAAR,wBAA+BH,EAA/B,eAAuDC,MA1B7D,kCA8BE,WACEG,cAAcb,KAAKF,SACnBe,cAAcb,KAAKD,QACnBM,SAASS,oBAAoB,cAAed,KAAKI,mBACjDC,SAASS,oBAAoB,QAASd,KAAKG,oBAlC/C,8BAqCE,WACEH,KAAKC,aACLD,KAAKe,SAAS,CACZnB,UAAU,MAxChB,+BA4CE,SAAkBoB,GAChBA,EAAMC,iBACNjB,KAAKe,SAAS,CACZnB,UAAU,IAEZiB,cAAcb,KAAKF,SACnBe,cAAcb,KAAKD,UAlDvB,wBAqDE,WAAc,IAAD,OACXC,KAAKF,QAAUoB,OAAOC,aAAY,WAChC,EAAKJ,SAAS,CACZlB,UAAWR,QAEZ,MACHW,KAAKD,OAASmB,OAAOC,aAAY,WAC/B,EAAKJ,SAAS,CACZ9B,MAAO,IAAIM,OAGboB,QAAQS,KAAK,EAAKzB,MAAMV,MAAME,cAAcC,OAAO,IAAK,MACvD,OAjEP,oBAoEE,WACE,OAAIY,KAAKL,MAAMC,SAEX,cAAC,EAAD,CACEZ,KAAMgB,KAAKL,MAAME,UACjBZ,MAAOe,KAAKL,MAAMV,QAKjB,SA9EX,GAAyBoC,IAAMC,WCb/BC,IAASC,OACP,cAAC,EAAD,IACAnB,SAASoB,eAAe,W","file":"static/js/main.78e08396.chunk.js","sourcesContent":["type Props = {\n  name: string,\n  today: Date,\n};\n\nexport const Clock = ({ name, today }: Props) => (\n  <div className=\"App\">\n    <h1>React clock</h1>\n\n    <div className=\"Clock\">\n      <strong className=\"Clock__name\">\n        {name}\n      </strong>\n\n      {' time is '}\n\n      <span className=\"Clock__time\">\n        {today.toUTCString().slice(-12, -4)}\n      </span>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport type State = {\n  hasClock: boolean,\n  today: Date,\n  clockName: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    hasClock: true,\n    today: new Date(),\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  timeId = 1;\n\n  componentDidMount() {\n    this.startTimer = this.startTimer.bind(this);\n    this.leftClickHandler = this.leftClickHandler.bind(this);\n    this.rightClickHandler = this.rightClickHandler.bind(this);\n    document.addEventListener('contextmenu', this.rightClickHandler);\n    document.addEventListener('click', this.leftClickHandler);\n    this.startTimer();\n  }\n\n  componentDidUpdate(_prevProps: State, prevState: State) {\n    const previousClockName = prevState.clockName;\n    const currentClockName = this.state.clockName;\n\n    if (previousClockName !== currentClockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from  ${previousClockName} to ${currentClockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n    clearInterval(this.timeId);\n    document.removeEventListener('contextmenu', this.rightClickHandler);\n    document.removeEventListener('click', this.leftClickHandler);\n  }\n\n  leftClickHandler() {\n    this.startTimer();\n    this.setState({\n      hasClock: true,\n    });\n  }\n\n  rightClickHandler(event: MouseEvent) {\n    event.preventDefault();\n    this.setState({\n      hasClock: false,\n    });\n    clearInterval(this.timerId);\n    clearInterval(this.timeId);\n  }\n\n  startTimer() {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n    this.timeId = window.setInterval(() => {\n      this.setState({\n        today: new Date(),\n      });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  render() {\n    if (this.state.hasClock) {\n      return (\n        <Clock\n          name={this.state.clockName}\n          today={this.state.today}\n        />\n      );\n    }\n\n    return null;\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}